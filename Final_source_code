// Final code 
//program made by kalatina camno
// traffic light
// Project 5 - Controlling Traffic
// define the pins that the buttons and lights are connected to:
#define westButton 3
#define eastButton 13
#define westRed 2
#define westYellow 1
#define westGreen 8
#define eastRed 12
#define eastYellow 11
#define eastGreen 10
#define westPedRed 6
#define westPedBlue 7
#define eastPedRed 4
#define eastPedBlue 5

#define yellowBlinkTime 500 // 0.5 seconds for yellow light blink
boolean trafficWest = true; // west = true, east = false
int flowTime = 10000; // amount of time to let traffic flow
int changeDelay = 2000; // amount of time between color changesc


void setup()
{
  // setup digital I/O pins
  pinMode(westButton, INPUT);
  pinMode(eastButton, INPUT);
  pinMode(westRed, OUTPUT);
  pinMode(westYellow, OUTPUT);
  pinMode(westGreen, OUTPUT);
  pinMode(eastRed, OUTPUT);
  pinMode(eastYellow, OUTPUT);
  pinMode(eastGreen, OUTPUT);
  pinMode(westPedRed, OUTPUT);
  pinMode(westPedBlue, OUTPUT);
  pinMode(eastPedRed, OUTPUT);
  pinMode(eastPedBlue, OUTPUT);

  // set initial state for lights - west side is green first
  digitalWrite(westRed, LOW);
  digitalWrite(westYellow, LOW);
  digitalWrite(westGreen, HIGH);
  digitalWrite(eastRed, HIGH);
  digitalWrite(eastYellow, LOW);
  digitalWrite(eastGreen, LOW);
  digitalWrite (westPedRed, HIGH);
  digitalWrite(westPedBlue, LOW);
  digitalWrite(eastPedRed, LOW);
  digitalWrite(eastPedBlue, HIGH);

}
void blinkYellowLight(int yellow)
{
  for ( int i = 0; i < 5; i++ ) // the yellow light blinks five second
  {
    digitalWrite(yellow, LOW);
    delay(yellowBlinkTime);
    digitalWrite(yellow, HIGH);
    delay(yellowBlinkTime);
  }
}

void greenToYellow(int green, int yellow)
{
  digitalWrite(green, LOW); // change east-facing lights from green
  // to yellow to red
  digitalWrite(yellow, HIGH);
  delay(changeDelay);
}

void yellowTored( int yellow, int red)
{
  digitalWrite(yellow,LOW);
  digitalWrite(red,HIGH);
  delay(changeDelay);
}
void loop()
{
  if ( digitalRead(westButton) == HIGH ) // request west>east traffic flow
  {
    if ( trafficWest != true )
      // only continue if traffic flowing in the opposite (east) direction
    {
      trafficWest = true; // change traffic flow flag to west>east
      delay(flowTime); // give time for traffic to flow
      /*digitalWrite(eastGreen, LOW); // change east-facing lights from green
      // to yellow to red
      digitalWrite(eastYellow, HIGH);
      delay(changeDelay);*/
      greenToYellow(eastGreen, eastYellow);
      digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, HIGH);
      delay(changeDelay);
      /* for ( int i = 0; i < 5; i++ ) // the yellow light blinks five second
        {
         digitalWrite(westYellow, LOW);
         delay(yellowBlinkTime);
         digitalWrite(westYellow, HIGH);
         delay(yellowBlinkTime);
      */
      blinkYellowLight(westYellow);
      digitalWrite(westYellow, LOW);
      digitalWrite(westRed, LOW); // change west-facing lights from red to green
      digitalWrite(westGreen, HIGH);
      digitalWrite( westPedBlue, HIGH);
    }
  }
  if ( digitalRead(eastButton) == HIGH ) // request east>west traffic flow
  {
    if ( trafficWest == true )
      // only continue if traffic flow is in the opposite (west) direction
    {
      trafficWest = false; // change traffic flow flag to east>west
      delay(flowTime); // give time for traffic to flow
      //digitalWrite(westGreen, LOW);
      // change west lights from green to yellow to red
      /*digitalWrite(westYellow, HIGH);
      delay(changeDelay);*/
      greenToYellow(westGreen, westYellow);
      digitalWrite(westYellow, LOW);
      digitalWrite(westRed, HIGH);
      delay(changeDelay);
      
      }

      blinkYellowLight(eastYellow);
      digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, LOW); // change east-facing lights from red to green
      digitalWrite(eastGreen, HIGH);
      digitalWrite (westPedBlue, HIGH);
      digitalWrite(westPedRed, LOW);
      digitalWrite(eastPedBlue, LOW);
      digitalWrite(eastPedRed, HIGH);
    }

    blinkYellowLight(eastGreen);
    digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, LOW); 
      digitalWrite(eastGreen, HIGH);
      digitalWrite (westPedBlue, HIGH);
      digitalWrite(westPedRed, LOW);
      digitalWrite(eastPedBlue, LOW);
      digitalWrite(eastPedRed, HIGH);

  /*    blinkYellowLight(westPedRed );
      digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, LOW); // change east-facing lights from red to green
      digitalWrite(eastGreen, HIGH);
      digitalWrite (westPedBlue, HIGH);
      digitalWrite(westPedRed, LOW);
      digitalWrite(eastPedBlue, LOW);
      digitalWrite(eastPedRed, HIGH);
    */

     blinkYellowLight(eastPedRed  );
      digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, LOW); 
      digitalWrite(eastGreen, HIGH);
      digitalWrite (westPedBlue, HIGH);
      digitalWrite(westPedRed, LOW);
      digitalWrite(eastPedBlue, LOW);
      digitalWrite(eastPedRed, HIGH);


       blinkYellowLight(westPedBlue   );
      digitalWrite(eastYellow, LOW);
      digitalWrite(eastRed, LOW); 
      digitalWrite(eastGreen, HIGH);
      digitalWrite (westPedBlue, HIGH);
      digitalWrite(westPedRed, LOW);
      digitalWrite(eastPedBlue, LOW);
      digitalWrite(eastPedRed, HIGH);


      
  }
  
